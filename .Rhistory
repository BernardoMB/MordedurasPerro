names(fng) <- nombres
setwd(workingDirectory)
# Fuente de Notificacion Hombres
spath <-paste(getwd(), "/Data/CSV/FuenteDeNotificacion/Hombres/", sep="")
setwd(spath)
fnh <- list.files()
fnh <- lapply(fnh, fread, sep=",")
names(fnh) <- nombres
setwd(workingDirectory)
# Fuente de Notificacion Mujeres
spath <-paste(getwd(), "/Data/CSV/FuenteDeNotificacion/Mujeres/", sep="")
setwd(spath)
fnm <- list.files()
fnm <- lapply(fnm, fread, sep=",")
names(fnm) <- nombres
setwd(workingDirectory)
# --------------- 2.2.- Grupo de Edad.
# Grupo de Edad General
spath <-paste(getwd(), "/Data/CSV/GrupoDeEdad/General/", sep="")
setwd(spath)
geg <- list.files()
geg <- lapply(geg, fread, sep=",")
names(geg) <- nombres
setwd(workingDirectory)
# Grupo de Edad Hombres
spath <-paste(getwd(), "/Data/CSV/GrupoDeEdad/Hombres/", sep="")
setwd(spath)
geh <- list.files()
geh <- lapply(geh, fread, sep=",")
names(geh) <- nombres
setwd(workingDirectory)
# Grupo de Edad Mujeres
spath <-paste(getwd(), "/Data/CSV/GrupoDeEdad/Mujeres/", sep="")
setwd(spath)
gem <- list.files()
gem <- lapply(gem, fread, sep=",")
names(gem) <- nombres
setwd(workingDirectory)
# --------------- 2.3.- Mes de Ocurrencia.
# Mes de Ocurrencia General
spath <-paste(getwd(), "/Data/CSV/MesDeOcurrencia/General/", sep="")
setwd(spath)
mog <- list.files()
mog <- lapply(mog, fread, sep=",")
names(mog) <- nombres
setwd(workingDirectory)
# Mes de Ocurrencia Hombres
spath <-paste(getwd(), "/Data/CSV/MesDeOcurrencia/Hombres/", sep="")
setwd(spath)
moh <- list.files()
moh <- lapply(moh, fread, sep=",")
names(moh) <- nombres
setwd(workingDirectory)
# Mes de Ocurrencia Mujeres
spath <-paste(getwd(), "/Data/CSV/MesDeOcurrencia/Mujeres/", sep="")
setwd(spath)
mom <- list.files()
mom <- lapply(mom, fread, sep=",")
names(mom) <- nombres
setwd(workingDirectory)
# --------------- 2.4.- Diccionario.
FuenteDeNotificacion = list(fng, fnh, fnm)
names(FuenteDeNotificacion) <- c("General", "Hombres", "Mujeres")
GrupoDeEdad = list(geg, geh, gem)
names(GrupoDeEdad) <- c("General", "Hombres", "Mujeres")
MesDeOcurrencia = list(mog, moh, mom)
names(MesDeOcurrencia) <- c("General", "Hombres", "Mujeres")
mpData = list(FuenteDeNotificacion, GrupoDeEdad, MesDeOcurrencia)
names(mpData) <- c("FuenteDeNotificacion", "GrupoDeEdad", "MesDeOcurrencia")
# ---------------------------- 3.- Limpieza de Codigo.
# ---------------- 3.1.- Eliminacion de columnas.
# Elimina la columna TOTAL de los data.frames de Fuente de Notificacion.
for (i in 1:length(mpData$FuenteDeNotificacion)) {
for (j in 1:length(mpData$FuenteDeNotificacion[[i]])) {
mpData$FuenteDeNotificacion[[i]][[j]][[11]] <- NULL
}
}
# Elimina la columna TOTAL de los data.frames de Gruepo de Edad.
for (i in 1:length(mpData$GrupoDeEdad)) {
for (j in 1:length(mpData$GrupoDeEdad[[i]])) {
mpData$GrupoDeEdad[[i]][[j]][[14]] <- NULL
}
}
# ---------------- 3.2.- Nombres, Agrega columnas, Pasa a formato organizado, Mordeduras to numeric.
# Corrige el nombre de los estados y de los encabezados.
for (i in 1:length(mpData)) {
cat <- mpData[[i]]
for (j in 1:length(cat)) {
type <- cat[[j]]
for (l in 1:length(type)) {
names(type[[l]]) <- toupper(names(type[[l]]))
}
for (m in 1:length(type)) {
if (i == 1) {
# Fuente de Notificacion
type[[m]] <- within(type[[m]],
{
SALUD <- gsub("[ ]", "", SALUD)
IMSS.ORD <- gsub("[ ]", "", IMSS.ORD)
ISSSTE <- gsub("[ ]", "", ISSSTE)
IMSS.OP <- gsub("[ ]", "",IMSS.OP)
DIF <- gsub("[ ]", "", DIF)
PEMEX <- gsub("[ ]", "", PEMEX)
SEDENA <- gsub("[ ]", "", SEDENA)
SEMAR <- gsub("[ ]", "", SEMAR)
OTRAS <- gsub("[ ]", "", OTRAS)
IMSS.ORD <- gsub("N.A.*|S.R*|NA.", "NA", IMSS.ORD)
SALUD <- gsub("N.A.*|S.R*|NA.", "NA", SALUD)
ISSSTE <- gsub("N.A.*|S.R*|NA.", "NA", ISSSTE)
IMSS.OP <- gsub("N.A.*|S.R*|NA.", "NA",IMSS.OP)
DIF <- gsub("N.A.*|S.R*|NA.", "NA", DIF)
PEMEX <- gsub("N.A.*|S.R*|NA.", "NA", PEMEX)
SEDENA <- gsub("N.A.*|S.R*|NA.", "NA", SEDENA)
SEMAR <- gsub("N.A.*|S.R*|NA.", "NA", SEMAR)
OTRAS <- gsub("N.A.*|S.R*|NA.", "NA", OTRAS)
ESTADO <- gsub("M.*co.*", "Mexico", ESTADO)
ESTADO <- gsub("Agua.*es.*", "Aguascalientes", ESTADO)
ESTADO <- gsub("Dist.*al.*", "Distrito Federal", ESTADO)
ESTADO <- gsub("Guan.*o.*", "Guanajuato", ESTADO)
ESTADO <- gsub("H.idalgo*", "Hidalgo", ESTADO)
ESTADO <- gsub("M.*n.*", "Michoacan", ESTADO)
ESTADO <- gsub("M.*los.*", "Morelos", ESTADO)
ESTADO <- gsub("Nuevo L.*e.*.*.*.*n.*", "Nuevo Leon", ESTADO)
ESTADO <- gsub("Nuevo Le.*n.*", "Nuevo Leon", ESTADO)
ESTADO <- gsub("T.abasco*", "Tabasco", ESTADO)
ESTADO <- gsub("T.amaulipas*", "Tamaulipas", ESTADO)
ESTADO <- gsub("Quer.*ro.*", "Queretaro", ESTADO)
ESTADO <- gsub("Z.acatecas.*", "Zacatecas", ESTADO)
ESTADO <- gsub("Zac.*cas.*", "Zacatecas", ESTADO)
ESTADO <- gsub("Quint.*oo.*", "Quintana Roo", ESTADO)
ESTADO <- gsub("San Luis Pot.*.*", "San Luis Potosi", ESTADO)
ESTADO <- gsub("Yuca.*n.*", "Yucatan",ESTADO)
})
# Agregando la columna sexo para pasar a formato organizado.
if (j == 1) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "GENERAL")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 2) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "HOMBRES")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 3) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "MUJERES")
}
type[[m]][["SEXO"]] <- SEXO
}
# Agregando la columna de a??o para pasar a formato organizado.
ANIO <- c()
for (p in 1:32) {
ANIO <- c(ANIO, 2003 + m)
}
type[[m]][["ANIO"]] <- ANIO
# Pasar a formato organizado.
type[[m]] <- gather(data = type[[m]],
key = "FUENTE",
value = "MORDEDURAS",
2:10)
}
else if (i == 2) {
# Grupo de Edad
type[[m]] <- within(type[[m]] ,
{
MAYOR.A.UNO <- gsub("[ ]", "", MAYOR.A.UNO)
UNO.A.CUATRO <- gsub("[ ]", "", UNO.A.CUATRO)
CINCO.A.NUEVE <- gsub("[ ]", "", CINCO.A.NUEVE)
DIEZ.A.CATORCE <- gsub("[ ]", "",DIEZ.A.CATORCE)
QUINCE.A.DIECINUEVE <- gsub("[ ]", "", QUINCE.A.DIECINUEVE)
VEINTE.A.VEINTICUATRO <- gsub("[ ]", "", VEINTE.A.VEINTICUATRO )
VEINTICINCO.A.CUARENTAYCUATRO <- gsub("[ ]", "", VEINTICINCO.A.CUARENTAYCUATRO)
CUARENTAYCINCO.A.CUARENTAYNUEVE <- gsub("[ ]", "", CUARENTAYCINCO.A.CUARENTAYNUEVE)
CINCUENTA.A.CINCUENTAYNUEVE <- gsub("[ ]", "", CINCUENTA.A.CINCUENTAYNUEVE)
SESENTA.A.SESENTAYCUATRO <- gsub("[ ]", "", SESENTA.A.SESENTAYCUATRO)
MAYOR.A.SESENTAYCINCO <- gsub("[ ]", "", MAYOR.A.SESENTAYCINCO)
NO.SE.REPORTO.LA.EDAD <- gsub("[ ]", "", NO.SE.REPORTO.LA.EDAD)
ESTADO <- gsub("M.*co.*", "Mexico", ESTADO)
ESTADO <- gsub("Agua.*es.*", "Aguascalientes", ESTADO)
ESTADO <- gsub("Dist.*al.*", "Distrito Federal", ESTADO)
ESTADO <- gsub("Guan.*o.*", "Guanajuato", ESTADO)
ESTADO <- gsub("M.*n.*", "Michoacan", ESTADO)
ESTADO <- gsub("M.*los.*", "Morelos", ESTADO)
ESTADO <- gsub("Nuevo Le.*n.*", "Nuevo Leon", ESTADO)
ESTADO <- gsub("Quer.*ro.*", "Queretaro", ESTADO)
ESTADO <- gsub("Zac.*cas.*", "Zacatecas", ESTADO)
ESTADO <- gsub("Quint.*oo.*", "Quintana Roo", ESTADO)
ESTADO <- gsub("San Luis Pot.*.*", "San Luis Potosi", ESTADO)
ESTADO <- gsub("Yuca.*n.*", "Yucatan",ESTADO)
})
# Agregando la columna sexo para pasar a formato organizado.
if (j == 1) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "GENERAL")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 2) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "HOMBRES")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 3) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "MUJERES")
}
type[[m]][["SEXO"]] <- SEXO
}
# Agregando la columna de a??o para pasar a formato organizado.
ANIO <- c()
for (p in 1:32) {
ANIO <- c(ANIO, 2003 + m)
}
type[[m]][["ANIO"]] <- ANIO
# Pasar a formato organizado.
type[[m]] <- gather(data = type[[m]],
key = "EDAD",
value = "MORDEDURAS",
2:13)
}
else if (i == 3) {
# Mes de ocurrencia
type[[m]] <- within(type[[m]] ,
{
ESTADO <- gsub("M.*co.*", "Mexico", ESTADO)
ESTADO <- gsub("Agua.*es.*", "Aguascalientes", ESTADO)
ESTADO <- gsub("Dist.*al.*", "Distrito Federal", ESTADO)
ESTADO <- gsub("Guan.*o.*", "Guanajuato", ESTADO)
ESTADO <- gsub("M.*n.*", "Michoacan", ESTADO)
ESTADO <- gsub("M.*los.*", "Morelos", ESTADO)
ESTADO <- gsub("Nuevo Le.*n.*", "Nuevo Leon", ESTADO)
ESTADO <- gsub("Quer.*ro.*", "Queretaro", ESTADO)
ESTADO <- gsub("Zac.*cas.*", "Zacatecas", ESTADO)
ESTADO <- gsub("Quint.*oo.*", "Quintana Roo", ESTADO)
ESTADO <- gsub("San Luis Pot.*.*", "San Luis Potosi", ESTADO)
ESTADO <- gsub("Yuca.*n.*", "Yucatan",ESTADO)
})
# Agregando la columna sexo para pasar a formato organizado.
if (j == 1) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "GENERAL")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 2) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "HOMBRES")
}
type[[m]][["SEXO"]] <- SEXO
} else if (j == 3) {
SEXO <- c()
for (n in 1:32) {
SEXO <- c(SEXO, "MUJERES")
}
type[[m]][["SEXO"]] <- SEXO
}
# Agregando la columna de a??o para pasar a formato organizado.
ANIO <- c()
for (p in 1:32) {
ANIO <- c(ANIO, 2003 + m)
}
type[[m]][["ANIO"]] <- ANIO
# Pasar a formato organizado.
type[[m]] <- gather(data = type[[m]],
key = "MES",
value = "MORDEDURAS",
2:13)
}
type[[m]][["MORDEDURAS"]] <- as.numeric(type[[m]][["MORDEDURAS"]])
}
cat[[j]] <- type
}
mpData[[i]] <- cat
}
# Corroborando la informacion que se necesita.
mpData$FuenteDeNotificacion
str(mpData$FuenteDeNotificacion)
mpData$GrupoDeEdad
str(mpData$GrupoDeEdad)
mpData$MesDeOcurrencia
str(mpData$MesDeOcurrencia)
# ---------------- 3.3.- Juntar todas las tablas en formato organizado ---------
ofnGeneral <- data.frame()
ofnHombres <- data.frame()
ofnMujeres <- data.frame()
ogeGeneral <- data.frame()
ogeHombres <- data.frame()
ogeMujeres <- data.frame()
omoGeneral <- data.frame()
omoHombres <- data.frame()
omoMujeres <- data.frame()
OFuenteDeNotifiacion = list(ofnGeneral, ofnHombres, ofnMujeres)
names(OFuenteDeNotifiacion) <- c("General","Hombres","Mujeres")
OGrupoDeEdad = list(ogeGeneral, ogeHombres, ogeMujeres)
names(OGrupoDeEdad) <- c("General","Hombres","Mujeres")
OMesDeOcurrencia = list(omoGeneral, omoHombres, omoMujeres)
names(OMesDeOcurrencia) <- c("General","Hombres","Mujeres")
mpOData = list(OFuenteDeNotifiacion, OGrupoDeEdad, OMesDeOcurrencia)
names(mpOData) <- c("FuenteDeNotificacion","GrupoDeEdad","MesDeOcurrencia")
for (i in 1:3) {
for (j in 1:3) {
mpOData[[i]][[j]] <- do.call(rbind, mpData[[i]][[j]])
}
}
orgFn = data.frame()
orgGe = data.frame()
orgMo = data.frame()
mpOrgData = list(orgFn, orgGe, orgMo)
names(mpOrgData) <- c("FuenteDeNotificacion", "GrupoDeEdad", "MesDeOcurrencia")
for (i in 1:length(mpOrgData)) {
mpOrgData[[i]] <- do.call(rbind, mpOData[[i]])
}
# Comprobando la informacion. (3 tablas en formato organizado).
# Fuente de Notificacion.
mpOrgData$FuenteDeNotificacion
str(mpOrgData$FuenteDeNotificacion)
head(mpOrgData$FuenteDeNotificacion)
tail(mpOrgData$FuenteDeNotificacion)
# Grupo de Edad.
mpOrgData$GrupoDeEdad
str(mpOrgData$GrupoDeEdad)
head(mpOrgData$GrupoDeEdad)
tail(mpOrgData$GrupoDeEdad)
# Mes de Ocurrencia.
mpOrgData$MesDeOcurrencia
str(mpOrgData$MesDeOcurrencia)
head(mpOrgData$MesDeOcurrencia)
tail(mpOrgData$MesDeOcurrencia)
# ---------------- 4.1.- Fuente de notificacion.
for (i in 1:12) {
# General
porSexoYAnioGeneral <- subset(mpOrgData$FuenteDeNotificacion, SEXO == "GENERAL" & ANIO == 2003 + i )
sumaG <- sum(subset(porSexoYAnioGeneral$MORDEDURAS, ! is.na(porSexoYAnioGeneral$MORDEDURAS)))
# Hombres
porSexoYAnioHombres <- subset(mpOrgData$FuenteDeNotificacion, SEXO == "HOMBRES" & ANIO == 2003 + i )
sumaH <- sum(subset(porSexoYAnioHombres$MORDEDURAS, ! is.na(porSexoYAnioHombres$MORDEDURAS)))
# Mujeres
porSexoYAnioMujeres <- subset(mpOrgData$FuenteDeNotificacion, SEXO == "MUJERES" & ANIO == 2003 + i )
sumaM <- sum(subset(porSexoYAnioMujeres$MORDEDURAS, ! is.na(porSexoYAnioMujeres$MORDEDURAS)))
# Prueba de consistencia
if (sumaG != sumaH + sumaM) {
print(2003 + i)
}
}
for (i in 1:12) {
# General
porSexoYAnioGeneralge <- subset(mpOrgData$GrupoDeEdad, SEXO == "GENERAL" & ANIO == 2003 + i )
sumaGge <- sum(subset(porSexoYAnioGeneralge$MORDEDURAS, ! is.na(porSexoYAnioGeneralge$MORDEDURAS)))
# Hombres
porSexoYAnioHombresge <- subset(mpOrgData$GrupoDeEdad, SEXO == "HOMBRES" & ANIO == 2003 + i )
sumaHge <- sum(subset(porSexoYAnioHombresge$MORDEDURAS, ! is.na(porSexoYAnioHombresge$MORDEDURAS)))
# Mujeres
porSexoYAnioMujeresge <- subset(mpOrgData$GrupoDeEdad, SEXO == "MUJERES" & ANIO == 2003 + i )
sumaMge <- sum(subset(porSexoYAnioMujeresge$MORDEDURAS, ! is.na(porSexoYAnioMujeresge$MORDEDURAS)))
# Prueba de consistencia
if (sumaGge != sumaHge + sumaMge) {
print(2003 + i)
}
}
for (i in 1:12) {
# General
porSexoYAnioGeneralmo <- subset(mpOrgData$MesDeOcurrencia, SEXO == "GENERAL" & ANIO == 2003 + i )
sumaGmo <- sum(subset(porSexoYAnioGeneralmo$MORDEDURAS, ! is.na(porSexoYAnioGeneralmo$MORDEDURAS)))
# Hombres
porSexoYAnioHombresmo <- subset(mpOrgData$MesDeOcurrencia, SEXO == "HOMBRES" & ANIO == 2003 + i )
sumaHmo <- sum(subset(porSexoYAnioHombresmo$MORDEDURAS, ! is.na(porSexoYAnioHombresmo$MORDEDURAS)))
# Mujeres
porSexoYAnioMujeresmo <- subset(mpOrgData$MesDeOcurrencia, SEXO == "MUJERES" & ANIO == 2003 + i )
sumaMmo <- sum(subset(porSexoYAnioMujeresmo$MORDEDURAS, ! is.na(porSexoYAnioMujeresmo$MORDEDURAS)))
# Prueba de consistencia
if (sumaGmo != sumaHmo + sumaMmo) {
print(2003 + i)
}
}
# Piramides
hombres <- subset(mpOrgData$FuenteDeNotificacion, SEXO %in% "HOMBRES")
mujeres <- subset(mpOrgData$FuenteDeNotificacion, SEXO %in% "MUJERES")
estados <- c('Aguascalientes', 'Baja California', 'Baja California Sur', 'Campeche', 'Chiapas', 'Chihuahua', 'Coahuila', 'Colima', 'Distrito Federal', 'Durango', 'Guanajuato','Guerrero', 'Hidalgo', 'Jalisco', 'Mexico', 'Michoacan', 'Morelos', 'Nayarit','Nuevo Leon', 'Oaxaca', 'Puebla', 'Queretaro', 'Quintana Roo', 'San Luis Potosi','Sinaloa', 'Sonora', 'Tabasco', 'Tamaulipas', 'Tlaxcala', 'Veracruz', 'Yucatan','Zacatecas')
fuentes <- names(fng$`2004`)
fuentes <- fuentes[-c(1,11)]
dataframesPorEstado <- list()
for (i in 1:length(estados)) {
# Hombres
hombresYEstado <- subset(hombres, ESTADO %in% estados[[i]])
totales1 <- c()
for (j in 1:length(fuentes)) {
hombresYEstadoYFuente <- subset(hombresYEstado, FUENTE %in% fuentes[[j]])
suma <- sum(subset(hombresYEstadoYFuente$MORDEDURAS,! is.na(hombresYEstadoYFuente$MORDEDURAS)))
totales1 <- c(totales1, suma)
}
# Mujeres
mujeresYEstado <- subset(mujeres, ESTADO %in% estados[[i]])
totales2 <- c()
for (k in 1:length(fuentes)) {
mujeresYEstadoYFuente <- subset(mujeresYEstado, FUENTE %in% fuentes[[k]])
suma2 <- sum(subset(mujeresYEstadoYFuente$MORDEDURAS,! is.na(mujeresYEstadoYFuente$MORDEDURAS)))
totales2 <- c(totales2, suma2)
}
# Creacion de los data.drames.
dataframesPorEstado[[i]] <- data.frame(fuentes, totales1, totales2)
names(dataframesPorEstado[[i]]) <- c("FUENTE", "HOMBRES", "MUJERES")
}
# Tendencia.
fn <- subset(mpOrgData$FuenteDeNotificacion, SEXO  %in% c("GENERAL"))
fn <-subset(fn, !is.na(MORDEDURAS))
years <- c()
sums <- c()
for (i in 1:12) {
new <- subset(fn, ANIO %in% c(i+2003))
sums <- c(sums, sum(new$MORDEDURAS))
years <- c(years, i+2003)
}
FuenteDeN <- data.frame(years, sums)
# Create Line Chart
xrange <- range(FuenteDeN$years)
yrange <- range(FuenteDeN$sums)
plot(xrange, yrange, type="n", xlab="A??os",
ylab="Mordeduras" )
lines(FuenteDeN$years, FuenteDeN$sums, type="l", lwd=1.5)
title("Total de Mordeduras", "Crecimineto de las mordeduras de perro a trav??s de los a??os.")
# Fuente de Notificacio en cada a??o.
fuente <- c("SALUD","IMSS.ORD","ISSSTE","IMSS.OP","DIF","PEMEX","SEDENA","SEMAR","OTRAS")
graphs.fn <- list()
for (i in 1:12) {
fn <- subset(mpOrgData$FuenteDeNotificacion, ANIO %in% c(2003 + i))
fn <- subset(fn, SEXO %in% c("GENERAL"))
valores <- c()
for (j in 1:length(fuente)) {
fnI <- subset(fn, FUENTE %in% c(fuente[[j]]))
suma <- sum(fnI$MORDEDURAS)
valores <- c(valores, suma)
}
fn.data.frame <- data.frame(fuente, valores)
print(fn.data.frame)
names(fn.data.frame) <- c("Fuente", "Mordeduras")
graph <- ggplot(fn.data.frame, aes(x = Fuente, y = Mordeduras)) +theme_bw() + geom_bar(stat = "identity")+ ggtitle(paste("", 2003 + i)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
graphs.fn[[i]] <- graph
}
do.call("grid.arrange", c(graphs.fn, ncol=3, top = "Fuente de Notificaci??n"))
# Grupo de edad en cada a??o.
grupoedad <- c("Ma1","1a4","5a9","10a14","15a19","20a24","25a44","45a49","50a59","60a64","Ma65","NSRE")
grupoedad <- as.factor(grupoedad)
levels(grupoedad) <- c("Ma1","1a4","5a9","10a14","15a19","20a24","25a44","45a49","50a59","60a64","Ma65","NSRE")
intervalos <- c("MAYOR.A.UNO","UNO.A.CUATRO","CINCO.A.NUEVE","DIEZ.A.CATORCE","QUINCE.A.DIECINUEVE","VEINTE.A.VEINTICUATRO","VEINTICINCO.A.CUARENTAYCUATRO","CUARENTAYCINCO.A.CUARENTAYNUEVE","CINCUENTA.A.CINCUENTAYNUEVE","SESENTA.A.SESENTAYCUATRO","MAYOR.A.SESENTAYCINCO","NO.SE.REPORTO.LA.EDAD")
graphs.ge <- list()
for (i in 1:12) {
ge <- subset(mpOrgData$GrupoDeEdad, ANIO %in% c(2003 + i))
ge <- subset(ge, SEXO %in% c("GENERAL"))
valores <- c()
for (j in 1:length(intervalos)) {
geI <- subset(ge, EDAD %in% c(intervalos[[j]]))
suma <- sum(geI$MORDEDURAS)
valores <- c(valores, suma)
}
ge.data.frame <- data.frame(grupoedad, valores)
names(ge.data.frame) <- c("Grupo", "Mordeduras")
graph <-  ggplot(ge.data.frame, aes(x = Grupo, y = Mordeduras)) +theme_bw() + geom_bar(stat = "identity")+ ggtitle(paste("", 2003 + i)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
graphs.ge[[i]] <- graph
}
do.call("grid.arrange", c(graphs.ge, ncol=3, top = "Grupo de Edad"))
# Mes de ocurrencia en cada a??o.
mes1 <- c("ENE","FEB","MAR","ABR","MAY","JUN","JUL","AGO","SEP","OCT","NOV","DIC")
mes <- c("ENE","FEB","MAR","ABR","MAY","JUN","JUL","AGO","SEP","OCT","NOV","DIC")
mes <- as.factor(mes)
levels(mes) <- c("ENE","FEB","MAR","ABR","MAY","JUN","JUL","AGO","SEP","OCT","NOV","DIC")
graphs.mo <- list()
for (i in 1:12) {
mo <- subset(mpOrgData$MesDeOcurrencia, ANIO %in% c(2003 + i))
mo <- subset(mo, SEXO %in% c("GENERAL"))
valores <- c()
for (j in 1:length(mes)) {
moI <- subset(mo, MES %in% c(mes1[[j]]))
suma <- sum(subset(moI$MORDEDURAS, ! is.na(moI$MORDEDURAS)))
valores <- c(valores, suma)
}
mo.data.frame <- data.frame(mes, valores)
names(mo.data.frame) <- c("Mes", "Mordeduras")
graph <- ggplot(mo.data.frame, aes(x = Mes, y = Mordeduras)) +theme_bw() + geom_bar(stat = "identity")+ ggtitle(paste("", 2003 + i)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
graphs.mo[[i]] <- graph
}
do.call("grid.arrange", c(graphs.mo, ncol=3, top = "Mes de Ocurrencia"))
# Para el Boxplot
estados <- c('Aguascalientes', 'Baja California', 'Baja California Sur', 'Campeche', 'Chiapas', 'Chihuahua', 'Coahuila', 'Colima', 'Distrito Federal', 'Durango', 'Guanajuato','Guerrero', 'Hidalgo', 'Jalisco', 'Mexico', 'Michoacan', 'Morelos', 'Nayarit','Nuevo Leon', 'Oaxaca', 'Puebla', 'Queretaro', 'Quintana Roo', 'San Luis Potosi','Sinaloa', 'Sonora', 'Tabasco', 'Tamaulipas', 'Tlaxcala', 'Veracruz', 'Yucatan','Zacatecas')
data.frames.eats <- list()
for (i in 1:12) {
porAnio <- subset(mpOrgData$FuenteDeNotificacion, ANIO %in% c(2003 + i))
porAnioYGeneral <- subset(porAnio, SEXO %in% c("GENERAL"))
totales <- c()
vectorAnio <- c()
for (j in 1:32) {
porAnioYGeneralYEstado <- subset(porAnioYGeneral, ESTADO %in% c(estados[[j]]))
totales <- c(totales, sum(subset(porAnioYGeneralYEstado$MORDEDURAS, ! is.na(porAnioYGeneralYEstado$MORDEDURAS))))
vectorAnio <- c(vectorAnio, 2003 +i)
}
data.frame.Estado.Anio.total <- data.frame(estados, vectorAnio, totales)
data.frames.eats[[i]] <- data.frame.Estado.Anio.total
}
data.frames.eats2 <- do.call(rbind, data.frames.eats)
names(data.frames.eats2) <- c("ESTADO", "ANIO", "TOTAL.MORDEDURAS")
# Box plot A??os vs. Mordeduras por estado.
p <- ggplot(data.frames.eats2, aes(factor(ANIO), TOTAL.MORDEDURAS))
p + geom_boxplot() + geom_hline(yintercept=4267.594)
write.table(mpOrgData$FuenteDeNotificacion, file = "FuenteDeNotificacion.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(mpOrgData$GrupoDeEdad, file = "GrupoDeEdad.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
write.table(mpOrgData$MesDeOcurrencia, file = "MesDeOcurrencia.csv",row.names=FALSE, na="",col.names=FALSE, sep=",")
